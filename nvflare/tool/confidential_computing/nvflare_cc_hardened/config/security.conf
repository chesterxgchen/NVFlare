# NVFLARE Security Configuration

# Network security for FL ports (required)
# Format: "port:protocol:direction:description"
ALLOWED_PORTS=(
    # FL Communication (required)
    "8002:tcp:bidirectional:FL training"    # FL training communication
    "8003:tcp:bidirectional:Admin API"      # Admin API communication
)

# System Monitoring Configuration (server-only, outbound-only)
SYSTEM_MONITORING_ENABLED=false
SYSTEM_MONITORING_PORT=""  # Leave empty to disable system monitoring
SYSTEM_MONITORING_TYPE="statsd"  # Currently only supports statsd exporter

# ML Metrics Configuration (server-only, outbound-only)
ML_METRICS_ENABLED=false
ML_METRICS_PORT="5000"  # Single port for all ML metrics if enabled
ML_METRICS_TYPE=""  # Options: tensorboard, mlflow, wandb

# Attestation configuration
# Format: "service:port:protocol:endpoint:description"
ATTESTATION_SERVICES=(
    "ITA:9000:tcp:api.trustedservices.intel.com:Intel Trust Authority"
    "SNP:9001:tcp:kdsintf.amd.com:AMD Secure Nested Paging"
    "MAA:9002:tcp:sharedeus.eus.attest.azure.net:Microsoft Azure Attestation"
    "NRAS:9003:tcp:nras.nvidia.com:NVIDIA Remote Attestation"
)

# Network security settings
NETWORK_SECURITY=(
    # Connection rate limits
    "FL_CONN_RATE=60/minute"
    "ADMIN_CONN_RATE=30/minute"
    "SYSTEM_MONITOR_CONN_RATE=10/minute"
    "ML_METRICS_CONN_RATE=10/minute"
    
    # Connection limits per IP
    "FL_CONN_PER_IP=10"
    "ADMIN_CONN_PER_IP=2"
    "SYSTEM_MONITOR_CONN_PER_IP=1"
    "ML_METRICS_CONN_PER_IP=1"
    
    # Buffer tuning for FL workloads
    "net.core.rmem_max=16777216"
    "net.core.wmem_max=16777216"
    "net.ipv4.tcp_rmem=4096 87380 16777216"
    "net.ipv4.tcp_wmem=4096 87380 16777216"

    # TCP hardening for FL communication
    "net.ipv4.tcp_max_syn_backlog=8192"     # Increase SYN backlog to handle more concurrent connections
    "net.ipv4.tcp_slow_start_after_idle=0"  # Disable TCP slow start after idle for better FL performance
    "net.ipv4.tcp_tw_reuse=1"               # Enable safe reuse of TIME-WAIT sockets
)

# Security audit configuration
AUDIT_RULES=(
    "-w /etc/nvflare/config -p wa -k fl_config_changes"
    "-w /etc/nvflare/keys -p wa -k fl_key_access"
    "-w /var/log/nvflare -p wa -k fl_log_changes"
    "-a exit,always -F arch=b64 -S execve -F exe=/opt/nvflare/bin/* -k fl_exec"
)

# Process resource limits
PROCESS_LIMITS=(
    # FL process limits
    "nvflare soft nproc 1024"
    "nvflare hard nproc 2048"
    "nvflare soft nofile 4096"
    "nvflare hard nofile 8192"
    "nvflare hard core 0"

    # System monitoring limits (server-only)
    "statsd soft nproc 512"
    "statsd hard nproc 1024"
    "statsd soft nofile 4096"
    "statsd hard nofile 8192"

    # ML metrics limits (server-only)
    "nvflare_metrics soft nproc 512"
    "nvflare_metrics hard nproc 1024"
    "nvflare_metrics soft nofile 4096"
    "nvflare_metrics hard nofile 8192"
)

# Default security policy
DEFAULT_PORT_POLICY="deny"  # Deny all ports except those explicitly allowed

# Pre-installation Configuration (read-only after build)
PREINSTALL_CONFIG=(
    # Format: "mount_point:type:size:mode:owner:device:hash_device"
    "/mnt/preinstall:verity:1G:0500:root:/dev/mapper/nvflare-preinstall:/dev/mapper/nvflare-preinstall-hash"
)
 

# Package validation rules
PACKAGE_VALIDATION=(
    "signature_verify:required"
    "hash_verify:required"
    "source_verify:required"
    "dependency_scan:required"
)

# Build-time package installation path
PACKAGE_INSTALL_PATH="/mnt/preinstall/packages"

# Runtime restrictions
RUNTIME_RESTRICTIONS=(
    "mount_readonly:/mnt/preinstall"
    "disable_remount:true"
    "verify_integrity:true"
    "block_new_installs:true"
)

# Package security configuration
PACKAGE_SECURITY=(
    # PCR allocations
    "pcr:11:packages"          # Package measurements
    "pcr:12:verity-root-hash"  # dm-verity root hash
    
    # TPM NVRAM indices
    "nvram:0x01500016:measurements:64"  # Package and partition measurements
    "nvram:0x01500017:policy:32"        # Measurement policy
    
    # Boot-time verification
    "verify:packages:required"
    "verify:root-hash:required"
    "verify:pcr-state:required"
    
    # Runtime re-verification interval (0 = verify only at boot)
    "runtime-verify-interval:0"
)

# Package measurement policy
PACKAGE_MEASUREMENT_POLICY=(
    # PCR 11 must match stored package measurements
    "pcr-policy:11:match"
    
    # PCR 12 must match stored root hash
    "pcr-policy:12:match"
    
    # Fail if any verification fails
    "policy-action:fail:halt-boot"
)

# Pre-installation Package Configuration
PACKAGE_PHASES=(
    # Format: "phase:mount_point:type:size:mode:owner:device:hash_device:handler"
    "1:/mnt/preinstall/nvflare:verity:2G:0500:root:/dev/mapper/nvflare-base:/dev/mapper/nvflare-base-hash:pex_install"
    "2:/mnt/preinstall/app:verity:1G:0500:root:/dev/mapper/nvflare-app:/dev/mapper/nvflare-app-hash:pex_install"
    "3:/mnt/preinstall/startup:verity:1G:0500:root:/dev/mapper/nvflare-startup:/dev/mapper/nvflare-startup-hash:dir_copy"
)

# Package handlers configuration
PACKAGE_HANDLERS=(
    # PEX installation handler
    "pex_install:validate_pex:install_pex:verify_pex"
    # Directory copy handler
    "dir_copy:validate_dir:copy_dir:verify_dir"
)

# Build phase control
CURRENT_BUILD_PHASE="1"  # Set by build script for each phase
